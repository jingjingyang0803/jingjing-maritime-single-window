name: Deploy to Amazon ECS

on:
  push:
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@main
      - name: Set up Node.js
        uses: actions/setup-node@main
        with:
          node-version: "latest"
      - name: Install and test
        run: |
          cd ./msw-app
          npm install
          npm test

  build:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@main
      - name: Login to GitHub Container Registry
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin
      - name: Build and push
        run: |
          docker build -f ./Dockerfile -t ghcr.io/${{ github.repository }}/msw-app .
          docker push ghcr.io/${{ github.repository }}/msw-app

  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@main
        
      - name: Deploy to EC2
        uses: easingthemes/ssh-deploy@main
        with:
          SSH_PRIVATE_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          REMOTE_HOST: ${{ secrets.HOST_DNS }}
          REMOTE_USER: ${{ secrets.USERNAME }}
          TARGET: ${{ secrets.TARGET_DIR }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            ssh -o StrictHostKeyChecking=no -i ${{ secrets.AWS_SECRET_ACCESS_KEY }} ${{ secrets.USERNAME }}@${{ secrets.HOST_DNS }} << 'EOF'
              docker pull ghcr.io/${{ github.repository }}/msw-app
              docker run -d --name msw-app -p 80:80 ghcr.io/${{ github.repository }}/msw-app
            EOF
