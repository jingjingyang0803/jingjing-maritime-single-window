name: Deploy to Amazon EC2

on:
  push:
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@main
      - name: Set up Node.js
        uses: actions/setup-node@main
        with:
          node-version: "latest"
      - name: Install and test
        run: |
          cd ./msw-app
          npm install
          npm test

  build:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@main
      - name: Login to GitHub Container Registry
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin
      - name: Build and push
        run: |
          cd ./msw-app
          docker build -f Dockerfile -t ghcr.io/${{ github.repository }} .
          docker run -p 3000:3000 ghcr.io/${{ github.repository }}
          docker push ghcr.io/${{ github.repository }}

  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@main
	
      - name: Deploy to EC2
	uses: easingthemes/ssh-deploy@main
	env:
	  SSH_PRIVATE_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
	  REMOTE_HOST: ${{ secrets.HOST_DNS }}
	  REMOTE_USER: ${{ secrets.USERNAME }}
	  TARGET: ${{ secrets.TARGET_DIR }}
	 
      - name: Execute commands on EC2 instance
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST_DNS }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          script: |
            cd ./home/jingjing-maritime-single-window/msw-app
            docker build -f Dockerfile -t msw-app .
            docker run -p 80:80 msw-app
          
            sudo docker pull ghcr.io/latest${{ github.repository }}
            sudo docker stop msw-app || true
            sudo docker rm msw-app || true
            sudo docker run -d --name msw-app -p 80:80 ghcr.io/${{ github.repository }}
